[tool.poetry]
name = "discord-activity-bot"
version = "1.1.0"
description = ""
authors = ["Alexei Stoliarov <alexei.stoliarov@gmail.com>"]
license = "MIT"
packages = [{ include = "dbot", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
Jinja2 = "^3.1.2"
sentry-sdk = "^1.5.10"
structlog = "^22.1.0"
tenacity = "^8.1.0"
discord-py = { extras = ["voice"], version = "^2.3.2" }
redis = "^5.0.0"
pydantic = "^2.3.0"
pydantic-settings = "^2.0.3"
freezegun = "^1.2.2"
aioprometheus = {extras = ["aiohttp"], version = "^23.3.0"}

[tool.poetry.group.dev.dependencies]
mypy = "^1.5.1"
pytest = "^7.4.0"
pytest-mock = "^3.11.1"
isort = "^5.12.0"
black = "^23.7.0"
pytest-asyncio = "^0.21.1"
flake8 = "^6.1.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.isort]
combine_as_imports = true
profile = "black"

[tool.mypy]
plugins = [
    "pydantic.mypy"
]
disallow_any_decorated = false
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_reexport = true
strict_equality = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
mypy_path = "stubs"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[[tool.mypy.overrides]]
module = [
    "tests.*"
]
ignore_errors = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = ["src", "tests"]
addopts = [
    "--import-mode=importlib",
]
